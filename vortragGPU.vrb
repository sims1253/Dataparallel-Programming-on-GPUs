\frametitle{Optimierung}
\begin{lstlisting}[style=customc,caption=innere Schleife und Output]
for (int k = 0; k < BLOCK_SIZE; ++k){
Csub[0] += AS(ty, k) * BS(k, tx);
Csub[1] += AS(ty+16, k) * BS(k, tx);
}
barrier(CLK_LOCAL_MEM_FENCE); // sync threads
}
int c = wB * BLOCK_SIZE * by + BLOCK_SIZE * bx;
C[c + wB * ty + tx] = Csub[0];
C[c + wB * (ty+16) + tx] = Csub[1];
\end{lstlisting}

\begin{itemize}

\item
Daten aus dem lokalen Speicher werden wiederverwendet
\item
Weniger Threads pro Block erm\"oglich \"Uberlappung von Speicherzugriff mit Arithmetik
\end{itemize}


